import * as game from './game.js';

const serverCommands = { // Server's interface
    startGame: ({opponent, settings}) => {
	const client = document.getElementById('client-name').textContent;
	
	document.getElementById('game-opponents').textContent = `${client} vs ${opponent}`;
	game.start({settings});
	pageFlip.to('page-game');
    },
};
export class Server { // Wrapper around socket
    constructor(socket) {
	this.socket = socket;

	Object.keys(serverCommands).forEach(command => {
	    socket.on(command, (args, callback) => serverCommands[command](args, { // context
		callback,
	    }));
	});
    }
    getData(key) {
	return new Promise((resolve, reject) => {
	    this.socket.emit('getData', {key}, client => resolve(client));
	});
    }
    on(eventName, callback) {
	this.socket.on(eventName, callback);
    }
    playRandom() {
	this.socket.emit('playRandom');
    }
    gameInput(input) {
	this.socket.emit('gameInput', input);
    }
}
